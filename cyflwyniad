#!/usr/bin/env python

# This program generates HTML presentations based in reveal.js, from a certain
# custom input format.

import argparse
import re
import sys


def complain(message):
  raise Exception(message)

def main():
  # Sort out the command line.
  parser = argparse.ArgumentParser()
  parser.add_argument(dest='input_filename', help='input filename')
  parser.add_argument('--output', '-o', dest='output_filename', help='output filename', default=None)
  args = parser.parse_args()

  # Make sure we have reasonable filenames.
  if not args.output_filename:
    args.output_filename = re.sub('\.cy$', '.html', args.input_filename)
  if args.input_filename == args.output_filename:
    complain('Input and output filenames are the same.')
  
  print args.input_filename, '-->', args.output_filename

  # Read the input file.
  with open(args.input_filename, 'r') as f:
    x = f.read()

  # Tokenize the input.
  patterns = [
    r'\[config\]',
    r'\[style\]',
    r'\[slides\]',
    r'-{5,}',
    r'.'
  ]
  tokens = list()
  while x:
    for pattern in patterns:
      match = re.search('^(' + pattern + ')', x)
      if match:
        token = match.groups(1)
        tokens.append(token)
        print 'before:', x
        x = x[len(token):]
        print 'after:', x
        break



if __name__ == '__main__':
  main()
